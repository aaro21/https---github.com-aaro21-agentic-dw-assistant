Dockerfile

FROM python:3.12-slim

# Install ODBC Driver 18 and dependencies
RUN apt-get update && \
    apt-get install -y gnupg curl apt-transport-https && \
    curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/debian/12/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev gcc && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /app
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY backend/app /app

CMD ["python", "extract_lineage.py"]

.env
SQL_SERVER=your_server
SQL_DB=your_db
SQL_USER=your_user
SQL_PASSWORD=your_password


docker-compose
version: "3.9"

services:
  extractor:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env

extract_lineage
import os
from dotenv import load_dotenv
import pyodbc
from sqlglot.lineage import LineageAnalyzer

load_dotenv()

conn_str = (
    f"DRIVER={{ODBC Driver 18 for SQL Server}};"
    f"SERVER={os.getenv('SQL_SERVER')};"
    f"DATABASE={os.getenv('SQL_DB')};"
    f"UID={os.getenv('SQL_USER')};"
    f"PWD={os.getenv('SQL_PASSWORD')};"
    f"TrustServerCertificate=yes;"
)

conn = pyodbc.connect(conn_str)
cursor = conn.cursor()

cursor.execute("""
SELECT TOP 1 OBJECT_NAME(object_id) as proc_name, definition
FROM sys.sql_modules
WHERE definition LIKE '%INTO%'
""")
row = cursor.fetchone()
proc_name, proc_text = row.proc_name, row.definition
print(f"Processing: {proc_name}\n")

lineage = LineageAnalyzer().analyze(proc_text)

print("Destinations:")
for db, tables in lineage.writes.items():
    for t in tables:
        print(f"  {db}.{t}")

print("Sources:")
for db, tables in lineage.reads.items():
    for t in tables:
        print(f"  {db}.{t}")